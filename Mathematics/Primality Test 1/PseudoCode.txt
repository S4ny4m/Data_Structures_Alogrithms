Basic Solution:

1.Take input n
2.Check if n is divisible by any other no other than 1 and itself.
	2.1 If it is divisible, return false
	2.2 If it is not, return true

Optimized Solution:

1.Take input n
2.If number has no factor between 1 and square root of itsself then it is prime so instead of looping till n, we can loop till root of n
3.Each integer can be expressed in terms of 6k+i, with i =[-1,0,1,2,3,4]
4.Cleary, 6k+0,6k+2,6k+4 are divisible by 2 and 6k+3 is divisible by 3. Numbers left are 6k+1 and 6k-1
5.It is more efficient to check if 6k+1 and 6k-1 are divisible by any number or not.
	5.1 If n is divisible by 2 or 3, return False because 2 and 3 are exceptions in this case.
	5.2 If n is divisible by i, i starting from 5 and incrementing by 6, return false and if not return true.

Note:
 All prime numbers are factors of 6k+1 or 6k-1 except 2 and 3 for some integer k and i = {-1,1,0,2,3,4}.
 So instead of going through all numbers till square root of n we can check only number in the form of 6k+1 or 6k-1.
